ext.title = 'ER Language'
description = 'Core language infrastructure'

configurations {
	mwe2 {
		extendsFrom implementation
	}
}

dependencies {
	implementation "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
	implementation "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"
	
	testImplementation "org.junit.jupiter:junit-jupiter-api:${junit5Version}"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit5Version}"
	testImplementation "org.eclipse.xtext:org.eclipse.xtext.testing:${xtextVersion}"
	testImplementation "org.eclipse.xtext:org.eclipse.xtext.xbase.testing:${xtextVersion}"
	
	mwe2 'org.eclipse.emf:org.eclipse.emf.mwe2.launch'
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${xtextVersion}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
	mwe2 'org.eclipse.xtext:xtext-antlr-generator'
}

task generateXtextLanguage(type: JavaExec) {
	mainClass = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/main/java/org/big/erd/GenerateEntityRelationship.mwe2"
	inputs.file "src/main/java/org/big/erd/EntityRelationship.xtext"
	outputs.dir "src/main/xtext-gen"
	args += "src/main/java/org/big/erd/GenerateEntityRelationship.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

test {
	useJUnitPlatform()
}

processResources.dependsOn(generateXtextLanguage)
generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]
